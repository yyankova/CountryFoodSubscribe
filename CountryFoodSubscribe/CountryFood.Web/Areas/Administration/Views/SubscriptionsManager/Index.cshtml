@using CountryFood.Web.ViewModels
@model IEnumerable<ProductViewModel>

@{
    ViewBag.Title = "Manage Products";
    string controllerName = "ProductsManager";
}
<br />
<br />
<br />
<br />
@(Html.Kendo().Grid<ProductViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Width(60);
        columns.Bound(p => p.Name);
        columns.Bound(p => p.Producer).EditorTemplateName("Producer");
        columns.Bound(p => p.Category).EditorTemplateName("Category");
        columns.Bound(p => p.NumberOfSubscriptions).Width(100).Title("Orders").Hidden();
        columns.Bound(p => p.PositiveVotes).Width(60).Title("-").Hidden();
        columns.Bound(p => p.NegativeVotes).Width(60).Title("+").Hidden();
        columns.Command(command => { command.Destroy(); command.Edit(); });
    })
    .Pageable(p => { p.Refresh(true); })
    .Sortable()
    .Scrollable()
    .Filterable()
    .ToolBar(toolbar => { toolbar.Create(); })
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Product"))
    //.HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(5)
        .Model(m => {
            m.Id(p => p.Id);
            m.Field(p => p.Id).Editable(false);
            m.Field(p => p.NumberOfSubscriptions).Editable(false);
            m.Field(p => p.PositiveVotes).Editable(false);
            m.Field(p => p.NegativeVotes).Editable(false);
        }
        )
        .Read(read => read.Action("GetProducts", controllerName))
        .Create(create => create.Action("Create", controllerName))
        .Destroy(destroy => destroy.Action("Delete", controllerName))
        .Update(update => update.Action("Update", controllerName))
     )
)
